repository: docker.drift.inera.se/ntjp/

container:
  backend:
    image:
      tag: # Override to supply another image tag to run
      pullPolicy: Always
  frontend:
    image:
      tag: # Override to supply another image tag to run
      pullPolicy: Always

# Environment-specific backwards-compatible service name
vip:
  name: default-ei-vip

queues:
  prefix: # Override to apply common queue naming

deployments:
  backend:
    replicaCount: 1
    elasticGrokFilter: camel
  frontend:
    replicaCount: 1
    elasticGrokFilter: camel

backend_resources: #{} # Comment the no-op curly-braces if you activate below commented-out resources.
  limits:
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 1Gi

frontend_resources: #{} # Comment the no-op curly-braces if you activate below commented-out resources.
  limits:
    memory: 512Mi
  requests:
    cpu: 75m
    memory: 512Mi

skltp:
  instanceId: -999 # placeholder to allow local chart templating.

environment:
  backend:
    _default_config_maps:
      - ei-backend-configmap-default
    config_maps:
      # Override to supply your own maps.
    secrets:
      # Override to supply your own secrets.
  frontend:
    _default_config_maps:
      - ei-frontend-configmap-default
    config_maps:
      # Override to supply your own maps.
    secrets:
      # Override to supply your own secrets.

log4j:
  loggers:
    - name: se.skltp.ei
      level: INFO
    - name: se.skltp.ei.subscriber
      level: INFO
    - name: se.skltp.ei.service.GetLogicalAddresseesServiceClient
      level: WARN
    - name: se.skltp.ei.EiApplication
      level: INFO
    - name: eiBackendLog
      level: INFO
    - name: eiFrontendLog
      level: INFO
    - name: org.apache.camel
      level: INFO
  rootLoggerLevel: WARN

probes_backend:
  startupProbe:
    httpGet:
      path: actuator/health/readiness
      port: 8881
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 5  # 15s initial + 9 failures * 5s period = 60 seconds max startup before failure and restart.
    timeoutSeconds: 4
    successThreshold: 1
    failureThreshold: 9
  livenessProbe:
    httpGet:
      path: actuator/health/liveness
      port: 8881
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    # 3x 10s + 5s timeout allows for up to 45 seconds of non-responsiveness before pod kill-and-restart.
    #    Earliest kill possible 55 seconds after startup completes.
    failureThreshold: 4
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: actuator/health/readiness
      port: 8881
      scheme: HTTP
    # lower initial delay than liveness, but same period, allows traffic to be governed before liveness is tested.
    initialDelaySeconds: 9
    periodSeconds: 10
    timeoutSeconds: 5
    # 1x 10s + timeout 5s allows for up to 15 seconds on non-response before traffic is cut from pod.
    #    Earliest cut possible 24 seconds after startup completes.
    failureThreshold: 1
    successThreshold: 1

probes_frontend:
  startupProbe:
    httpGet:
      path: actuator/health/readiness
      port: 8882
      scheme: HTTP
    initialDelaySeconds: 15
    periodSeconds: 5  # 15s initial + 9 failures * 5s period = 60 seconds max startup before failure and restart.
    timeoutSeconds: 4
    successThreshold: 1
    failureThreshold: 9
  livenessProbe:
    httpGet:
      path: actuator/health/liveness
      port: 8882
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    # 3x 10s + 5s timeout allows for up to 45 seconds of non-responsiveness before pod kill-and-restart.
    #    Earliest kill possible 55 seconds after startup completes.
    failureThreshold: 4
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: actuator/health/readiness
      port: 8882
      scheme: HTTP
    # lower initial delay than liveness, but same period, allows traffic to be governed before liveness is tested.
    initialDelaySeconds: 9
    periodSeconds: 10
    timeoutSeconds: 5
    # 1x 10s + timeout 5s allows for up to 15 seconds on non-response before traffic is cut from pod.
    #    Earliest cut possible 24 seconds after startup completes.
    failureThreshold: 1
    successThreshold: 1