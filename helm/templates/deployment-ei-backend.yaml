apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  name: ei-backend
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.deployments.backend.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      name: ei-backend
      app: ei
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        name: ei-backend
        app: ei
        app.kubernetes.io/name: ei-backend
        elasticGrokFilter: {{ .Values.deployments.backend.elasticGrokFilter }}
        monitoring: prometheus
    spec:
      volumes:
        - name: log4j
          configMap:
            name: ei-log4j
      imagePullSecrets:
        - name: regcred
      containers:
        - name: skltp-ei-backend
          image: "{{ .Values.repository }}skltp-ei-backend:{{ .Values.container.backend.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container.backend.image.pullPolicy }}
          volumeMounts:
            - mountPath: /etc/ei
              name: log4j
          ports:
            - containerPort: 8082
              protocol: TCP
              name: backend-tcp1
            - containerPort: 8083
              protocol: TCP
              name: backend-tcp2
            - containerPort: 8881
              protocol: TCP
              name: actuators
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "10"]
          # Injection of startup, liveness, and/or readiness probes below.
          {{- .Values.probes_backend | toYaml | nindent 10 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000 # ind-app user
            seccompProfile:
              type: RuntimeDefault
          resources: # Block-templated memory and CPU resources.
            {{- toYaml .Values.backend_resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          envFrom:
            {{- range $.Values.environment.backend._default_config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range $.Values.environment.backend.config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range $.Values.environment.backend.secrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}